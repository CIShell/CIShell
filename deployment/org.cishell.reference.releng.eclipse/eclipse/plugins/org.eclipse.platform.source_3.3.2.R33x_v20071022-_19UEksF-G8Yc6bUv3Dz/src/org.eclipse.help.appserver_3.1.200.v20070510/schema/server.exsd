<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.eclipse.help.appserver">
<annotation>
      <appInfo>
         <meta.schema plugin="org.eclipse.help.appserver" id="server" name="server"/>
      </appInfo>
      <documentation>
         Internal extension point to plug in an application server for help and other eclipse plugins.
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appInfo>
            <meta.element deprecated="true"/>
         </appInfo>
         <documentation>
            This extension point which was based on internal classes is deprecated and should not be used. It is likely to be removed in a future release. Use the HTTP service implementation provided by Equinox that is based on Jetty, see http://www.eclipse.org/equinox/server.

         </documentation>
      </annotation>
      <complexType>
         <sequence>
            <element ref="server"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="server">
      <annotation>
         <appInfo>
            <meta.element deprecated="true"/>
         </appInfo>
         <documentation>
            This extension point which was based on internal classes is deprecated and should not be used. It is likely to be removed in a future release. Use the HTTP service implementation provided by Equinox that is based on Jetty, see http://www.eclipse.org/equinox/server.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  The contributors to this extension point must implement the org.eclipse.help.appserver.internal.IWebappServer interface.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="default" type="boolean" use="default" value="false">
            <annotation>
               <documentation>
                  When set to true, this is the default application server. Normally, only the platform contributed default implementation should set this attribute to true.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         The following is a sample usage of the server extension point:
&lt;p&gt;
&lt;samp&gt;
&amp;lt;extension id=&quot;appserver&quot; name=&quot;Tomcat&quot;  point=&quot;org.eclipse.help.appserver.server&quot;&amp;gt;
&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;    &amp;lt;server class=&quot;org.eclipse.tomcat.internal.TomcatAppServer&quot; default=&quot;true&quot; /&amp;gt; 
&lt;br&gt;   &amp;lt;/extension&amp;gt;
&lt;/samp&gt;
&lt;/p&gt;
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="apiInfo"/>
      </appInfo>
      <documentation>
         The supplied class must implement the
&lt;tt&gt;org.eclipse.help.internal.appserver.IWebappServer&lt;/tt&gt;
interface. Methods in that interface control starting and stopping of the application server,
as well as starting and stopping of a web application.
Web applications must have direct access to classes loaded by the customized class loader passed in when starting the web application.
&lt;p&gt;
In addition to this, all the web applications running under the provided application server must have access to the Jasper 1 JSP Engine runtime. These libraries are currently shipped with Tomcat 4.0.x drivers (http://jakarta.apache.org).
&lt;/p&gt;
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         The Eclipse Platform provides an implementation of this extension point using the Apache Tomcat
application server.
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="copyright"/>
      </appInfo>
      <documentation>
         Copyright (c) 2002, 2005 IBM Corporation and others.&lt;br&gt;
All rights reserved. This program and the accompanying materials are made 
available under the terms of the Eclipse Public License v1.0 which accompanies 
this distribution, and is available at &lt;a href=&quot;http://www.eclipse.org/legal/epl-v10.html&quot;&gt;http://www.eclipse.org/legal/epl-v10.html&lt;/a&gt;
      </documentation>
   </annotation>

</schema>
